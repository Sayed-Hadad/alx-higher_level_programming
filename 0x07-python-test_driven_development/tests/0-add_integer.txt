The Testing module for 'add_integer' using doctest

>>> add_integer = __import__('0-add_integer').add_integer

	""" Normal Behaviour (adding 2 integers) """

	>>> add_integer(5, 10)
	15
	
	""" adding floats """

	>>> add_integer(5, 10.4)
	15

	>>> add_integer(5.2, 10)
	15

	>>> add_integer(5.2, 10.4)
	15

	>>> add_integer(3.141592653589793, 10)
	13

	""" adding something other that integer or float """

	>>> add_integer('a', 10)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(5, 'b')
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	""" missing args """

	>>> add_integer(2)
	100

	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	""" Type of returned value """

	>>> type(add_integer(5, 10))
	<class 'int'>

	""" float overflow, and NaN values """

	>>> add_integer(2.7976931348623157e+308, 10)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

	>>> add_integer(float('nan'), 10)
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer
